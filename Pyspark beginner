{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":815876,"sourceType":"datasetVersion","datasetId":429085},{"sourceId":9222620,"sourceType":"datasetVersion","datasetId":5577485},{"sourceId":76068140,"sourceType":"kernelVersion"}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install pyspark","metadata":{"execution":{"iopub.status.busy":"2024-08-22T05:23:52.153723Z","iopub.execute_input":"2024-08-22T05:23:52.154156Z","iopub.status.idle":"2024-08-22T05:24:49.406790Z","shell.execute_reply.started":"2024-08-22T05:23:52.154113Z","shell.execute_reply":"2024-08-22T05:24:49.405365Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"Collecting pyspark\n  Downloading pyspark-3.5.2.tar.gz (317.3 MB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m317.3/317.3 MB\u001b[0m \u001b[31m4.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25ldone\n\u001b[?25hRequirement already satisfied: py4j==0.10.9.7 in /opt/conda/lib/python3.10/site-packages (from pyspark) (0.10.9.7)\nBuilding wheels for collected packages: pyspark\n  Building wheel for pyspark (setup.py) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for pyspark: filename=pyspark-3.5.2-py2.py3-none-any.whl size=317812364 sha256=8c51c1d7c9b5a30b0145a97aa4d695dfd3986f4151aa549452893ad95fe1e472\n  Stored in directory: /root/.cache/pip/wheels/34/34/bd/03944534c44b677cd5859f248090daa9fb27b3c8f8e5f49574\nSuccessfully built pyspark\nInstalling collected packages: pyspark\nSuccessfully installed pyspark-3.5.2\n","output_type":"stream"}]},{"cell_type":"code","source":"pip install findspark","metadata":{"execution":{"iopub.status.busy":"2024-08-22T05:24:49.409445Z","iopub.execute_input":"2024-08-22T05:24:49.409955Z","iopub.status.idle":"2024-08-22T05:25:05.799936Z","shell.execute_reply.started":"2024-08-22T05:24:49.409909Z","shell.execute_reply":"2024-08-22T05:25:05.798436Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"Collecting findspark\n  Downloading findspark-2.0.1-py2.py3-none-any.whl.metadata (352 bytes)\nDownloading findspark-2.0.1-py2.py3-none-any.whl (4.4 kB)\nInstalling collected packages: findspark\nSuccessfully installed findspark-2.0.1\nNote: you may need to restart the kernel to use updated packages.\n","output_type":"stream"}]},{"cell_type":"code","source":"import findspark\nfindspark.init","metadata":{"execution":{"iopub.status.busy":"2024-08-22T05:25:05.802977Z","iopub.execute_input":"2024-08-22T05:25:05.803555Z","iopub.status.idle":"2024-08-22T05:25:05.820835Z","shell.execute_reply.started":"2024-08-22T05:25:05.803495Z","shell.execute_reply":"2024-08-22T05:25:05.819348Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"<function findspark.init(spark_home=None, python_path=None, edit_rc=False, edit_profile=False)>"},"metadata":{}}]},{"cell_type":"code","source":"from pyspark.sql import SparkSession # required to created a dataframe\nspark=SparkSession.builder.appName(\"Basics\").getOrCreate() \n\nimport pyspark.sql.functions","metadata":{"execution":{"iopub.status.busy":"2024-08-22T05:25:05.822552Z","iopub.execute_input":"2024-08-22T05:25:05.822953Z","iopub.status.idle":"2024-08-22T05:25:12.324750Z","shell.execute_reply.started":"2024-08-22T05:25:05.822913Z","shell.execute_reply":"2024-08-22T05:25:12.323075Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stderr","text":"Setting default log level to \"WARN\".\nTo adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n24/08/22 05:25:10 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n","output_type":"stream"}]},{"cell_type":"code","source":"df = spark.read.json(\"/kaggle/input/test-pyspark/sparkify_log_small.json\")\ndf.show(10)","metadata":{"execution":{"iopub.status.busy":"2024-08-22T05:35:44.998662Z","iopub.execute_input":"2024-08-22T05:35:44.999260Z","iopub.status.idle":"2024-08-22T05:35:46.555989Z","shell.execute_reply.started":"2024-08-22T05:35:44.999188Z","shell.execute_reply":"2024-08-22T05:35:46.554377Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":14,"outputs":[{"name":"stderr","text":"                                                                                \r","output_type":"stream"},{"name":"stdout","text":"+--------------------+---------+---------+------+-------------+---------+---------+-----+--------------------+------+--------+-------------+---------+--------------------+------+-------------+--------------------+------+\n|              artist|     auth|firstName|gender|itemInSession| lastName|   length|level|            location|method|    page| registration|sessionId|                song|status|           ts|           userAgent|userId|\n+--------------------+---------+---------+------+-------------+---------+---------+-----+--------------------+------+--------+-------------+---------+--------------------+------+-------------+--------------------+------+\n|       Showaddywaddy|Logged In|  Kenneth|     M|          112| Matthews|232.93342| paid|Charlotte-Concord...|   PUT|NextSong|1509380319284|     5132|Christmas Tears W...|   200|1513720872284|\"Mozilla/5.0 (Win...|  1046|\n|          Lily Allen|Logged In|Elizabeth|     F|            7|    Chase|195.23873| free|Shreveport-Bossie...|   PUT|NextSong|1512718541284|     5027|       Cheryl Tweedy|   200|1513720878284|\"Mozilla/5.0 (Win...|  1000|\n|Cobra Starship Fe...|Logged In|     Vera|     F|            6|Blackwell|196.20526| paid|          Racine, WI|   PUT|NextSong|1499855749284|     5516|Good Girls Go Bad...|   200|1513720881284|\"Mozilla/5.0 (Mac...|  2219|\n|          Alex Smoke|Logged In|   Sophee|     F|            8|   Barker|405.99465| paid|San Luis Obispo-P...|   PUT|NextSong|1513009647284|     2372| Don't See The Point|   200|1513720905284|\"Mozilla/5.0 (Win...|  2373|\n|                NULL|Logged In|   Jordyn|     F|            0|    Jones|     NULL| free|        Syracuse, NY|   GET|    Home|1513648531284|     1746|                NULL|   200|1513720913284|\"Mozilla/5.0 (Mac...|  1747|\n|                NULL|Logged In|   Jordyn|     F|            1|    Jones|     NULL| free|        Syracuse, NY|   GET|Settings|1513648531284|     1746|                NULL|   200|1513720932284|\"Mozilla/5.0 (Mac...|  1747|\n|              Redman|Logged In|    Paige|     F|            0|   Hunter|154.53995| free|       Brownwood, TX|   PUT|NextSong|1498414068284|     4406|        Smoke Buddah|   200|1513720955284|\"Mozilla/5.0 (Mac...|  1162|\n|     Ulrich Schnauss|Logged In|  Gabriel|     M|            2|     Koch|402.93832| paid|     Panama City, FL|   PUT|NextSong|1505820418284|     1060|           On My Own|   200|1513720959284|Mozilla/5.0 (Wind...|  1061|\n|                NULL|Logged In|    Mason|     M|            2|   Thomas|     NULL| paid|Indianapolis-Carm...|   GET|    Home|1487015656284|     5661|                NULL|   200|1513720959284|Mozilla/5.0 (comp...|   748|\n|                NULL|Logged In|Alexander|     M|            0|    Short|     NULL| free|       Green Bay, WI|   GET|    Home|1513594398284|     3689|                NULL|   200|1513720980284|\"Mozilla/5.0 (Win...|   597|\n+--------------------+---------+---------+------+-------------+---------+---------+-----+--------------------+------+--------+-------------+---------+--------------------+------+-------------+--------------------+------+\nonly showing top 10 rows\n\n","output_type":"stream"}]},{"cell_type":"code","source":"df.printSchema()\n","metadata":{"execution":{"iopub.status.busy":"2024-08-22T05:35:55.035968Z","iopub.execute_input":"2024-08-22T05:35:55.036449Z","iopub.status.idle":"2024-08-22T05:35:55.043699Z","shell.execute_reply.started":"2024-08-22T05:35:55.036404Z","shell.execute_reply":"2024-08-22T05:35:55.042217Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"root\n |-- artist: string (nullable = true)\n |-- auth: string (nullable = true)\n |-- firstName: string (nullable = true)\n |-- gender: string (nullable = true)\n |-- itemInSession: long (nullable = true)\n |-- lastName: string (nullable = true)\n |-- length: double (nullable = true)\n |-- level: string (nullable = true)\n |-- location: string (nullable = true)\n |-- method: string (nullable = true)\n |-- page: string (nullable = true)\n |-- registration: long (nullable = true)\n |-- sessionId: long (nullable = true)\n |-- song: string (nullable = true)\n |-- status: long (nullable = true)\n |-- ts: long (nullable = true)\n |-- userAgent: string (nullable = true)\n |-- userId: string (nullable = true)\n\n","output_type":"stream"}]},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-08-22T05:36:00.167711Z","iopub.execute_input":"2024-08-22T05:36:00.168278Z","iopub.status.idle":"2024-08-22T05:36:00.418720Z","shell.execute_reply.started":"2024-08-22T05:36:00.168213Z","shell.execute_reply":"2024-08-22T05:36:00.417319Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"DataFrame[summary: string, artist: string, auth: string, firstName: string, gender: string, itemInSession: string, lastName: string, length: string, level: string, location: string, method: string, page: string, registration: string, sessionId: string, song: string, status: string, ts: string, userAgent: string, userId: string]"},"metadata":{}}]},{"cell_type":"code","source":"df.describe(\"firstName\").show(10)","metadata":{"execution":{"iopub.status.busy":"2024-08-22T05:36:56.709692Z","iopub.execute_input":"2024-08-22T05:36:56.710127Z","iopub.status.idle":"2024-08-22T05:36:57.358271Z","shell.execute_reply.started":"2024-08-22T05:36:56.710089Z","shell.execute_reply":"2024-08-22T05:36:57.357050Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"+-------+---------+\n|summary|firstName|\n+-------+---------+\n|  count|     9664|\n|   mean|     NULL|\n| stddev|     NULL|\n|    min|   Aakash|\n|    max|     Zoie|\n+-------+---------+\n\n","output_type":"stream"}]},{"cell_type":"code","source":"df.count()","metadata":{"execution":{"iopub.status.busy":"2024-08-22T05:37:16.301498Z","iopub.execute_input":"2024-08-22T05:37:16.302801Z","iopub.status.idle":"2024-08-22T05:37:16.889374Z","shell.execute_reply.started":"2024-08-22T05:37:16.302751Z","shell.execute_reply":"2024-08-22T05:37:16.888131Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"10000"},"metadata":{}}]},{"cell_type":"code","source":"male_df = df.select([\"artist\",\"firstName\",\"lastName\"]).where(df.gender == \"M\")\nmale_df.show(5)","metadata":{"execution":{"iopub.status.busy":"2024-08-22T05:43:58.967852Z","iopub.execute_input":"2024-08-22T05:43:58.968420Z","iopub.status.idle":"2024-08-22T05:43:59.251669Z","shell.execute_reply.started":"2024-08-22T05:43:58.968373Z","shell.execute_reply":"2024-08-22T05:43:59.250369Z"},"trusted":true},"execution_count":21,"outputs":[{"name":"stdout","text":"+---------------+---------+--------+\n|         artist|firstName|lastName|\n+---------------+---------+--------+\n|  Showaddywaddy|  Kenneth|Matthews|\n|Ulrich Schnauss|  Gabriel|    Koch|\n|           NULL|    Mason|  Thomas|\n|           NULL|Alexander|   Short|\n|          Jay-Z|  Micheal|  Morgan|\n+---------------+---------+--------+\nonly showing top 5 rows\n\n","output_type":"stream"}]},{"cell_type":"code","source":"distinctArtist = df.select([\"artist\"]).distinct()\ndistinctArtist.show()","metadata":{"execution":{"iopub.status.busy":"2024-08-22T05:50:47.567312Z","iopub.execute_input":"2024-08-22T05:50:47.567852Z","iopub.status.idle":"2024-08-22T05:50:48.776345Z","shell.execute_reply.started":"2024-08-22T05:50:47.567810Z","shell.execute_reply":"2024-08-22T05:50:48.774898Z"},"trusted":true},"execution_count":25,"outputs":[{"name":"stdout","text":"+--------------------+\n|              artist|\n+--------------------+\n|      The Black Keys|\n|        STRATOVARIUS|\n|      The Chameleons|\n|Dashboard Confess...|\n|      Jarabe De Palo|\n|        Ziggy Marley|\n|        Yann Tiersen|\n|  The Watts Prophets|\n|            Goldfish|\n|           Kate Nash|\n|              DJ Taz|\n|    Jane's Addiction|\n|         Eva Cassidy|\n|               Rufio|\n|           Los Lobos|\n|         Silverstein|\n|        Rhett Miller|\n|              Nebula|\n|Yonder Mountain S...|\n|     Groove Coverage|\n+--------------------+\nonly showing top 20 rows\n\n","output_type":"stream"}]},{"cell_type":"code","source":"distinctArtist.count()","metadata":{"execution":{"iopub.status.busy":"2024-08-22T05:50:59.818858Z","iopub.execute_input":"2024-08-22T05:50:59.819349Z","iopub.status.idle":"2024-08-22T05:51:00.386466Z","shell.execute_reply.started":"2024-08-22T05:50:59.819305Z","shell.execute_reply":"2024-08-22T05:51:00.385202Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"3618"},"metadata":{}}]}]}